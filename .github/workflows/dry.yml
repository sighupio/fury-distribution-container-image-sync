name: "Dry run"

on:
  push:
    paths:
      - '.github/workflows/dry.yml'
      - '.github/actions/**'
      - 'modules/**'
      - '!README.md'

env:
  DRY_RUN: true

jobs:
  get_modules:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: fetch available modules
        uses: ./.github/actions/get-modules
        id: get_modules_as_string
    outputs:
      modules: ${{ steps.get_modules_as_string.outputs.modules }}
  build_list:
    runs-on: ubuntu-24.04
    needs: get_modules
    steps:
      - uses: actions/checkout@master
      - name: generate KFD image build list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: ${{ needs.get_modules.outputs.modules }}
    outputs:
      image_to_build: ${{ steps.generate_image_lists.outputs.image_to_build }}
  build:
    runs-on: ubuntu-24.04
    needs:
      - build_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.build_list.outputs.image_to_build) }}
    steps:
      - uses: actions/checkout@master
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME_TEMP }}
          password: ${{ secrets.DOCKERHUB_PASSWORD_TEMP }}
      - name: Login to SIGHUP new Registry
        uses: docker/login-action@v3
        with:
          registry: registry.sighup.io
          username: ${{ secrets.SIGHUP_REGISTRY_USERNAME }}
          password: ${{ secrets.SIGHUP_REGISTRY_PASSWORD }}
      - name: setup docker build for ${{ matrix.image.destination }}:${{ matrix.image.tag }}
        uses: ./.github/actions/docker-build
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          platforms: ${{ matrix.image.platforms }}
          module: ${{ matrix.image.module }}
          build_context: ${{ matrix.image.build.context }}
          build_args: ${{ matrix.image.build.args }}
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ############ AUTH ############
  ##############################
  auth_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD auth image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'auth'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_auth:
    runs-on: ubuntu-24.04
    needs:
      - auth_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.auth_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ###############################
  ############# AWS #############
  ###############################
  aws_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD aws image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'aws'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_aws:
    runs-on: ubuntu-24.04
    needs:
      - aws_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.aws_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ############# DR #############
  ##############################
  dr_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD dr image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'dr'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_dr:
    runs-on: ubuntu-24.04
    needs:
      - dr_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.dr_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ########### EXTRA ############
  ##############################
  extra_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD extra image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'extra'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_extra:
    runs-on: ubuntu-24.04
    needs:
      - extra_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.extra_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ########### INGRESS ##########
  ##############################
  ingress_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD ingress image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'ingress'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_ingress:
    runs-on: ubuntu-24.04
    needs:
      - ingress_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.ingress_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ########### KAFKA ##########
  ##############################
  kafka_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD kafka image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'kafka'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_kafka:
    runs-on: ubuntu-24.04
    needs:
      - kafka_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.kafka_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### KEYCLOACK ##########
  ##############################
  keycloak_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD keycloak image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'keycloak'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_keycloak:
    runs-on: ubuntu-24.04
    needs:
      - keycloak_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.keycloak_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### KONG ##########
  ##############################
  kong_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD kong image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'kong'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_kong:
    runs-on: ubuntu-24.04
    needs:
      - kong_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.kong_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### KUMA ##########
  ##############################
  kuma_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD kuma image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'kuma'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_kuma:
    runs-on: ubuntu-24.04
    needs:
      - kuma_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.kuma_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### logging ##########
  ##############################
  logging_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD logging image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'logging'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_logging:
    runs-on: ubuntu-24.04
    needs:
      - logging_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.logging_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### monitoring ##########
  ##############################
  monitoring_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD monitoring image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'monitoring'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_monitoring:
    runs-on: ubuntu-24.04
    needs:
      - monitoring_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.monitoring_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### networking ##########
  ##############################
  networking_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD networking image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'networking'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_networking:
    runs-on: ubuntu-24.04
    needs:
      - networking_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.networking_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### on-premise ##########
  ##############################
  onprem_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD on-premise image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'on-premises'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_onprem:
    runs-on: ubuntu-24.04
    needs:
      - onprem_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.onprem_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### opa ##########
  ##############################
  opa_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD opa image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'opa'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_opa:
    runs-on: ubuntu-24.04
    needs:
      - opa_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.opa_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### postgresql ##########
  ##############################
  postgresql_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD postgresql image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'postgresql'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_postgresql:
    runs-on: ubuntu-24.04
    needs:
      - postgresql_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.postgresql_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### redis ##########
  ##############################
  redis_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD redis image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'redis'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_redis:
    runs-on: ubuntu-24.04
    needs:
      - redis_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.redis_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### registry ##########
  ##############################
  registry_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD registry image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'registry'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_registry:
    runs-on: ubuntu-24.04
    needs:
      - registry_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.registry_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### service-mesh ##########
  ##############################
  service-mesh_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD service-mesh image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'service-mesh'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_service-mesh:
    runs-on: ubuntu-24.04
    needs:
      - service-mesh_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.service-mesh_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### storage ##########
  ##############################
  storage_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD storage image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'storage'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_storage:
    runs-on: ubuntu-24.04
    needs:
      - storage_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.storage_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### tracing ##########
  ##############################
  tracing_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD tracing image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'tracing'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_tracing:
    runs-on: ubuntu-24.04
    needs:
      - tracing_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.tracing_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### vault ##########
  ##############################
  vault_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD vault image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'vault'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_vault:
    runs-on: ubuntu-24.04
    needs:
      - vault_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.vault_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}
  ##############################
  ######### vsphere ##########
  ##############################
  vsphere_list:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@master
      - name: generate KFD vsphere image sync list
        id: generate_image_lists
        uses: ./.github/actions/generate-build-sync-image-lists
        with:
          modules: 'vsphere'
    outputs:
      image_to_sync: ${{ steps.generate_image_lists.outputs.image_to_sync}}
  sync_vsphere:
    runs-on: ubuntu-24.04
    needs:
      - vsphere_list
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.vsphere_list.outputs.image_to_sync) }}
    container:
      image: quay.io/skopeo/stable:v1.16.1
    steps:
      - uses: actions/checkout@master
      - name: Login to registries
        run: |
          skopeo login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }} docker.io
          skopeo login --username ${{ secrets.SIGHUP_REGISTRY_USERNAME }} --password ${{ secrets.SIGHUP_REGISTRY_PASSWORD }} registry.sighup.io
        env:
          REGISTRY_AUTH_FILE: /tmp/auth.json
      - name: sync images with skopeo
        uses: ./.github/actions/skopeo-sync
        with:
          source: ${{ matrix.image.source }}
          tag: ${{ matrix.image.tag }}
          destination: ${{ matrix.image.destination }}
          multi-arch: ${{ matrix.image.multi-arch }}
          registry_auth_file: /tmp/auth.json
          dry_run: ${{ env.DRY_RUN }}